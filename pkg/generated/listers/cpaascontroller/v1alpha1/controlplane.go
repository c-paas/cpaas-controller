/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	cpaascontrollerv1alpha1 "github.com/c-paas/cpaas-controller/pkg/apis/cpaascontroller/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// ControlPlaneLister helps list ControlPlanes.
// All objects returned here must be treated as read-only.
type ControlPlaneLister interface {
	// List lists all ControlPlanes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*cpaascontrollerv1alpha1.ControlPlane, err error)
	// ControlPlanes returns an object that can list and get ControlPlanes.
	ControlPlanes(namespace string) ControlPlaneNamespaceLister
	ControlPlaneListerExpansion
}

// controlPlaneLister implements the ControlPlaneLister interface.
type controlPlaneLister struct {
	listers.ResourceIndexer[*cpaascontrollerv1alpha1.ControlPlane]
}

// NewControlPlaneLister returns a new ControlPlaneLister.
func NewControlPlaneLister(indexer cache.Indexer) ControlPlaneLister {
	return &controlPlaneLister{listers.New[*cpaascontrollerv1alpha1.ControlPlane](indexer, cpaascontrollerv1alpha1.Resource("controlplane"))}
}

// ControlPlanes returns an object that can list and get ControlPlanes.
func (s *controlPlaneLister) ControlPlanes(namespace string) ControlPlaneNamespaceLister {
	return controlPlaneNamespaceLister{listers.NewNamespaced[*cpaascontrollerv1alpha1.ControlPlane](s.ResourceIndexer, namespace)}
}

// ControlPlaneNamespaceLister helps list and get ControlPlanes.
// All objects returned here must be treated as read-only.
type ControlPlaneNamespaceLister interface {
	// List lists all ControlPlanes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*cpaascontrollerv1alpha1.ControlPlane, err error)
	// Get retrieves the ControlPlane from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*cpaascontrollerv1alpha1.ControlPlane, error)
	ControlPlaneNamespaceListerExpansion
}

// controlPlaneNamespaceLister implements the ControlPlaneNamespaceLister
// interface.
type controlPlaneNamespaceLister struct {
	listers.ResourceIndexer[*cpaascontrollerv1alpha1.ControlPlane]
}
